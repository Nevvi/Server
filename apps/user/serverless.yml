service: user

frameworkVersion: '3'
variablesResolutionMode: 20210326

plugins:
  - serverless-prune-plugin
  - serverless-iam-roles-per-function
  - serverless-webpack
  - serverless-domain-manager


params:
  default:
    apiUserPoolName: nevvi-development-api-users
    basePath: ${self:provider.stage}-user
    domainName: api.development.nevvi.net
  development:
    basePath: user
  production:
    apiUserPoolName: nevvi-api-users
    basePath: user
    domainName: api.nevvi.net

custom:
  prune:
    automatic: true
    number: 2
  customDomain:
    domainName: ${param:domainName}
    basePath: ${param:basePath}
  apiUserPoolName: ${param:apiUserPoolName}
  apiUserPoolArn: ${ssm:/nevvi/cognito/${self:custom.apiUserPoolName}/arn}

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'test'}
  region: ${opt:region, 'us-east-1'}
  apiName: user-${self:provider.stage}
  stackName: user-${self:provider.stage}
  deploymentBucket:
    name: nevvi-serverless-deployment-bucket
  deploymentPrefix: ${self:provider.stage}

functions:
  userAuthorizer:
    handler: src/functions/UserAuthorizer.authorize

  createUser:
    handler: src/functions/UserHandler.createUser
    events:
      - http:
          path: /api/v1/users
          method: post
          authorizer:
            arn: ${self:custom.apiUserPoolArn}
            scopes:
              - user_api/user_api.all